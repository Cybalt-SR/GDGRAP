class Time
!!!128130.cpp!!!	Time()

    using clock = std::chrono::high_resolution_clock;
    curr_time = clock::now();
    prev_time = curr_time;
    curr_ns = 0;
!!!128258.cpp!!!	Reset() : void

    prev_time = curr_time;
!!!128386.cpp!!!	TickFixed(in update_callback : std::function<void(double)>) : void

    using clock = std::chrono::high_resolution_clock;

    curr_time = clock::now();
    auto dur = std::chrono::duration_cast<std::chrono::nanoseconds>(curr_time - prev_time);
    prev_time = curr_time;

    if (this->paused)
        return;

    curr_ns += (float)dur.count() * scale;

    while (curr_ns >= timestep.count()) {

        auto ms = std::chrono::duration_cast<std::chrono::milliseconds>(timestep);
        auto seconds = (double)ms.count() / 1000;
        update_callback(seconds);

        curr_ns -= timestep.count();
    }
