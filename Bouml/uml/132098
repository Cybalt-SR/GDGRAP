format 224
"GLFW" // GDPHYSX::Dependencies::include::GLFW
  revision 1
  modified_by 2 "PC"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "D:/Documents/GitHub/GDGRAP/GDPHYSX/Dependencies/include/GLFW/"
  cpp_src_dir "D:/Documents/GitHub/GDGRAP/GDPHYSX/Dependencies/include/GLFW/"
  classview 131714 "GLFW"
    
    classdiagramsettings member_max_width 0 end
    
    classcompositediagramsettings end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    objectcompositediagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 145666 "GLFWwindow"
      visibility package stereotype "typedef" base_type class_ref 145666 // GLFWwindow
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief Opaque window object.

 Opaque window object.

 @see @ref window_object

 @since Added in version 3.0.

 @ingroup window
"
      classrelation 162818 // <dependency>
	relation 162818 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 162818 // <dependency>
	  b parent class_ref 145666 // GLFWwindow
      end
    end

    class 151810 "GLFWvkproc"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(* ${name})(void);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief Vulkan API function pointer type.

 Generic function pointer used for returning Vulkan API function pointers
 without forcing a cast from a regular pointer.

 @sa @ref vulkan_proc
 @sa @ref glfwGetInstanceProcAddress

 @since Added in version 3.2.

 @ingroup vulkan
"
    end

    class 151938 "GLFWmonitor"
      visibility package stereotype "typedef" base_type class_ref 151938 // GLFWmonitor
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief Opaque monitor object.

 Opaque monitor object.

 @see @ref monitor_object

 @since Added in version 3.0.

 @ingroup monitor
"
      classrelation 162690 // <dependency>
	relation 162690 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 162690 // <dependency>
	  b parent class_ref 151938 // GLFWmonitor
      end
    end

    class 152066 "GLFWcursor"
      visibility package stereotype "typedef" base_type class_ref 152066 // GLFWcursor
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief Opaque cursor object.

 Opaque cursor object.

 @see @ref cursor_object

 @since Added in version 3.1.

 @ingroup input
"
      classrelation 162946 // <dependency>
	relation 162946 -_->
	  a public
	    cpp default "#include in source"
	    classrelation_ref 162946 // <dependency>
	  b parent class_ref 152066 // GLFWcursor
      end
    end

    class 152194 "GLFWerrorfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(int error_code, const char* description);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for error callbacks.

 This is the function pointer type for error callbacks.  An error callback
 function has the following signature:
 @code
 void callback_name(int error_code, const char* description)
 @endcode

 @param[in] error_code An [error code](@ref errors).  Future releases may add
 more error codes.
 @param[in] description A UTF-8 encoded string describing the error.

 @pointer_lifetime The error description string is valid until the callback
 function returns.

 @sa @ref error_handling
 @sa @ref glfwSetErrorCallback

 @since Added in version 3.0.

 @ingroup init
"
    end

    class 152322 "GLFWwindowposfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int xpos, int ypos);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for window position callbacks.

 This is the function pointer type for window position callbacks.  A window
 position callback function has the following signature:
 @code
 void callback_name(GLFWwindow* window, int xpos, int ypos)
 @endcode

 @param[in] window The window that was moved.
 @param[in] xpos The new x-coordinate, in screen coordinates, of the
 upper-left corner of the content area of the window.
 @param[in] ypos The new y-coordinate, in screen coordinates, of the
 upper-left corner of the content area of the window.

 @sa @ref window_pos
 @sa @ref glfwSetWindowPosCallback

 @since Added in version 3.0.

 @ingroup window
"
    end

    class 152450 "GLFWwindowsizefun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int width, int height);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for window size callbacks.

 This is the function pointer type for window size callbacks.  A window size
 callback function has the following signature:
 @code
 void callback_name(GLFWwindow* window, int width, int height)
 @endcode

 @param[in] window The window that was resized.
 @param[in] width The new width, in screen coordinates, of the window.
 @param[in] height The new height, in screen coordinates, of the window.

 @sa @ref window_size
 @sa @ref glfwSetWindowSizeCallback

 @since Added in version 1.0.
 @glfw3 Added window handle parameter.

 @ingroup window
"
    end

    class 152578 "GLFWwindowclosefun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for window close callbacks.

 This is the function pointer type for window close callbacks.  A window
 close callback function has the following signature:
 @code
 void function_name(GLFWwindow* window)
 @endcode

 @param[in] window The window that the user attempted to close.

 @sa @ref window_close
 @sa @ref glfwSetWindowCloseCallback

 @since Added in version 2.5.
 @glfw3 Added window handle parameter.

 @ingroup window
"
    end

    class 152706 "GLFWwindowrefreshfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for window content refresh callbacks.

 This is the function pointer type for window content refresh callbacks.
 A window content refresh callback function has the following signature:
 @code
 void function_name(GLFWwindow* window);
 @endcode

 @param[in] window The window whose content needs to be refreshed.

 @sa @ref window_refresh
 @sa @ref glfwSetWindowRefreshCallback

 @since Added in version 2.5.
 @glfw3 Added window handle parameter.

 @ingroup window
"
    end

    class 152834 "GLFWwindowfocusfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int focused);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for window focus callbacks.

 This is the function pointer type for window focus callbacks.  A window
 focus callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, int focused)
 @endcode

 @param[in] window The window that gained or lost input focus.
 @param[in] focused `GLFW_TRUE` if the window was given input focus, or
 `GLFW_FALSE` if it lost it.

 @sa @ref window_focus
 @sa @ref glfwSetWindowFocusCallback

 @since Added in version 3.0.

 @ingroup window
"
    end

    class 152962 "GLFWwindowiconifyfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int iconified);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for window iconify callbacks.

 This is the function pointer type for window iconify callbacks.  A window
 iconify callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, int iconified)
 @endcode

 @param[in] window The window that was iconified or restored.
 @param[in] iconified `GLFW_TRUE` if the window was iconified, or
 `GLFW_FALSE` if it was restored.

 @sa @ref window_iconify
 @sa @ref glfwSetWindowIconifyCallback

 @since Added in version 3.0.

 @ingroup window
"
    end

    class 153090 "GLFWwindowmaximizefun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int maximized);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for window maximize callbacks.

 This is the function pointer type for window maximize callbacks.  A window
 maximize callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, int maximized)
 @endcode

 @param[in] window The window that was maximized or restored.
 @param[in] maximized `GLFW_TRUE` if the window was maximized, or
 `GLFW_FALSE` if it was restored.

 @sa @ref window_maximize
 @sa glfwSetWindowMaximizeCallback

 @since Added in version 3.3.

 @ingroup window
"
    end

    class 153218 "GLFWframebuffersizefun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int width, int height);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for framebuffer size callbacks.

 This is the function pointer type for framebuffer size callbacks.
 A framebuffer size callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, int width, int height)
 @endcode

 @param[in] window The window whose framebuffer was resized.
 @param[in] width The new width, in pixels, of the framebuffer.
 @param[in] height The new height, in pixels, of the framebuffer.

 @sa @ref window_fbsize
 @sa @ref glfwSetFramebufferSizeCallback

 @since Added in version 3.0.

 @ingroup window
"
    end

    class 153346 "GLFWwindowcontentscalefun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, float xscale, float yscale);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for window content scale callbacks.

 This is the function pointer type for window content scale callbacks.
 A window content scale callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, float xscale, float yscale)
 @endcode

 @param[in] window The window whose content scale changed.
 @param[in] xscale The new x-axis content scale of the window.
 @param[in] yscale The new y-axis content scale of the window.

 @sa @ref window_scale
 @sa @ref glfwSetWindowContentScaleCallback

 @since Added in version 3.3.

 @ingroup window
"
    end

    class 153474 "GLFWmousebuttonfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int button, int action, int mods);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for mouse button callbacks.

 This is the function pointer type for mouse button callback functions.
 A mouse button callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, int button, int action, int mods)
 @endcode

 @param[in] window The window that received the event.
 @param[in] button The [mouse button](@ref buttons) that was pressed or
 released.
 @param[in] action One of `GLFW_PRESS` or `GLFW_RELEASE`.  Future releases
 may add more actions.
 @param[in] mods Bit field describing which [modifier keys](@ref mods) were
 held down.

 @sa @ref input_mouse_button
 @sa @ref glfwSetMouseButtonCallback

 @since Added in version 1.0.
 @glfw3 Added window handle and modifier mask parameters.

 @ingroup input
"
    end

    class 153602 "GLFWcursorposfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, double xpos, double ypos);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for cursor position callbacks.

 This is the function pointer type for cursor position callbacks.  A cursor
 position callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, double xpos, double ypos);
 @endcode

 @param[in] window The window that received the event.
 @param[in] xpos The new cursor x-coordinate, relative to the left edge of
 the content area.
 @param[in] ypos The new cursor y-coordinate, relative to the top edge of the
 content area.

 @sa @ref cursor_pos
 @sa @ref glfwSetCursorPosCallback

 @since Added in version 3.0.  Replaces `GLFWmouseposfun`.

 @ingroup input
"
    end

    class 153730 "GLFWcursorenterfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int entered);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for cursor enter/leave callbacks.

 This is the function pointer type for cursor enter/leave callbacks.
 A cursor enter/leave callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, int entered)
 @endcode

 @param[in] window The window that received the event.
 @param[in] entered `GLFW_TRUE` if the cursor entered the window's content
 area, or `GLFW_FALSE` if it left it.

 @sa @ref cursor_enter
 @sa @ref glfwSetCursorEnterCallback

 @since Added in version 3.0.

 @ingroup input
"
    end

    class 153858 "GLFWscrollfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, double xoffset, double yoffset);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for scroll callbacks.

 This is the function pointer type for scroll callbacks.  A scroll callback
 function has the following signature:
 @code
 void function_name(GLFWwindow* window, double xoffset, double yoffset)
 @endcode

 @param[in] window The window that received the event.
 @param[in] xoffset The scroll offset along the x-axis.
 @param[in] yoffset The scroll offset along the y-axis.

 @sa @ref scrolling
 @sa @ref glfwSetScrollCallback

 @since Added in version 3.0.  Replaces `GLFWmousewheelfun`.

 @ingroup input
"
    end

    class 153986 "GLFWkeyfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int key, int scancode, int action, int mods);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for keyboard key callbacks.

 This is the function pointer type for keyboard key callbacks.  A keyboard
 key callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, int key, int scancode, int action, int mods)
 @endcode

 @param[in] window The window that received the event.
 @param[in] key The [keyboard key](@ref keys) that was pressed or released.
 @param[in] scancode The system-specific scancode of the key.
 @param[in] action `GLFW_PRESS`, `GLFW_RELEASE` or `GLFW_REPEAT`.  Future
 releases may add more actions.
 @param[in] mods Bit field describing which [modifier keys](@ref mods) were
 held down.

 @sa @ref input_key
 @sa @ref glfwSetKeyCallback

 @since Added in version 1.0.
 @glfw3 Added window handle, scancode and modifier mask parameters.

 @ingroup input
"
    end

    class 154114 "GLFWcharfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, unsigned int codepoint);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for Unicode character callbacks.

 This is the function pointer type for Unicode character callbacks.
 A Unicode character callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, unsigned int codepoint)
 @endcode

 @param[in] window The window that received the event.
 @param[in] codepoint The Unicode code point of the character.

 @sa @ref input_char
 @sa @ref glfwSetCharCallback

 @since Added in version 2.4.
 @glfw3 Added window handle parameter.

 @ingroup input
"
    end

    class 154242 "GLFWcharmodsfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, unsigned int codepoint, int mods);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for Unicode character with modifiers
 callbacks.

 This is the function pointer type for Unicode character with modifiers
 callbacks.  It is called for each input character, regardless of what
 modifier keys are held down.  A Unicode character with modifiers callback
 function has the following signature:
 @code
 void function_name(GLFWwindow* window, unsigned int codepoint, int mods)
 @endcode

 @param[in] window The window that received the event.
 @param[in] codepoint The Unicode code point of the character.
 @param[in] mods Bit field describing which [modifier keys](@ref mods) were
 held down.

 @sa @ref input_char
 @sa @ref glfwSetCharModsCallback

 @deprecated Scheduled for removal in version 4.0.

 @since Added in version 3.1.

 @ingroup input
"
    end

    class 154370 "GLFWdropfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWwindow* window, int path_count, const char* paths[]);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for path drop callbacks.

 This is the function pointer type for path drop callbacks.  A path drop
 callback function has the following signature:
 @code
 void function_name(GLFWwindow* window, int path_count, const char* paths[])
 @endcode

 @param[in] window The window that received the event.
 @param[in] path_count The number of dropped paths.
 @param[in] paths The UTF-8 encoded file and/or directory path names.

 @pointer_lifetime The path array and its strings are valid until the
 callback function returns.

 @sa @ref path_drop
 @sa @ref glfwSetDropCallback

 @since Added in version 3.1.

 @ingroup input
"
    end

    class 154498 "GLFWmonitorfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(GLFWmonitor* monitor, int event);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for monitor configuration callbacks.

 This is the function pointer type for monitor configuration callbacks.
 A monitor callback function has the following signature:
 @code
 void function_name(GLFWmonitor* monitor, int event)
 @endcode

 @param[in] monitor The monitor that was connected or disconnected.
 @param[in] event One of `GLFW_CONNECTED` or `GLFW_DISCONNECTED`.  Future
 releases may add more events.

 @sa @ref monitor_event
 @sa @ref glfwSetMonitorCallback

 @since Added in version 3.0.

 @ingroup monitor
"
    end

    class 154626 "GLFWjoystickfun"
      visibility package stereotype "typedef" explicit_base_type "void"
      cpp_decl "${comment}typedef ${type}(*  ${name})(int jid, int event);
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief The function pointer type for joystick configuration callbacks.

 This is the function pointer type for joystick configuration callbacks.
 A joystick configuration callback function has the following signature:
 @code
 void function_name(int jid, int event)
 @endcode

 @param[in] jid The joystick that was connected or disconnected.
 @param[in] event One of `GLFW_CONNECTED` or `GLFW_DISCONNECTED`.  Future
 releases may add more events.

 @sa @ref joystick_event
 @sa @ref glfwSetJoystickCallback

 @since Added in version 3.2.

 @ingroup input
"
    end

    class 154754 "GLFWvidmode"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief Video mode type.

 This describes a single video mode.

 @sa @ref monitor_modes
 @sa @ref glfwGetVideoMode
 @sa @ref glfwGetVideoModes

 @since Added in version 1.0.
 @glfw3 Added refresh rate member.

 @ingroup monitor
"
      attribute 165634 "width"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The width, in screen coordinates, of the video mode.

"
      end

      attribute 165762 "height"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The height, in screen coordinates, of the video mode.

"
      end

      attribute 165890 "redBits"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The bit depth of the red channel of the video mode.

"
      end

      attribute 166018 "greenBits"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The bit depth of the green channel of the video mode.

"
      end

      attribute 166146 "blueBits"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The bit depth of the blue channel of the video mode.

"
      end

      attribute 166274 "refreshRate"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The refresh rate, in Hz, of the video mode.

"
      end
    end

    class 154882 "GLFWgammaramp"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief Gamma ramp.

 This describes the gamma ramp for a monitor.

 @sa @ref monitor_gamma
 @sa @ref glfwGetGammaRamp
 @sa @ref glfwSetGammaRamp

 @since Added in version 3.0.

 @ingroup monitor
"
      attribute 166402 "red"
	public explicit_type "ushort"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! An array of value describing the response of the red channel.

"
      end

      attribute 166530 "green"
	public explicit_type "ushort"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! An array of value describing the response of the green channel.

"
      end

      attribute 166658 "blue"
	public explicit_type "ushort"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! An array of value describing the response of the blue channel.

"
      end

      attribute 166786 "size"
	public explicit_type "uint"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The number of elements in each array.

"
      end
    end

    class 155010 "GLFWimage"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief Image data.

 This describes a single 2D image.  See the documentation for each related
 function what the expected pixel format is.

 @sa @ref cursor_custom
 @sa @ref window_icon

 @since Added in version 2.1.
 @glfw3 Removed format and bytes-per-pixel members.

 @ingroup window
"
      attribute 166914 "width"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The width, in pixels, of this image.

"
      end

      attribute 167042 "height"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The height, in pixels, of this image.

"
      end

      attribute 167170 "pixels"
	public explicit_type "byte"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The pixel data of this image, arranged left-to-right, top-to-bottom.

"
      end
    end

    class 155138 "GLFWgamepadstate"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "! @brief Gamepad input state

 This describes the input state of a gamepad.

 @sa @ref gamepad
 @sa @ref glfwGetGamepadState

 @since Added in version 3.3.

 @ingroup input
"
      attribute 167298 "buttons"
	public explicit_type "byte"
	multiplicity "[15]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The states of each [gamepad button](@ref gamepad_buttons), `GLFW_PRESS`
 or `GLFW_RELEASE`.

"
      end

      attribute 167426 "axes"
	public explicit_type "float"
	multiplicity "[6]"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "! The states of each [gamepad axis](@ref gamepad_axes), in the range -1.0
 to 1.0 inclusive.

"
      end
    end
  end

  deploymentview 131714 "GLFW"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 136322 "glfw3"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 151810 // GLFWvkproc
	class_ref 151938 // GLFWmonitor
	class_ref 145666 // GLFWwindow
	class_ref 152066 // GLFWcursor
	class_ref 152194 // GLFWerrorfun
	class_ref 152322 // GLFWwindowposfun
	class_ref 152450 // GLFWwindowsizefun
	class_ref 152578 // GLFWwindowclosefun
	class_ref 152706 // GLFWwindowrefreshfun
	class_ref 152834 // GLFWwindowfocusfun
	class_ref 152962 // GLFWwindowiconifyfun
	class_ref 153090 // GLFWwindowmaximizefun
	class_ref 153218 // GLFWframebuffersizefun
	class_ref 153346 // GLFWwindowcontentscalefun
	class_ref 153474 // GLFWmousebuttonfun
	class_ref 153602 // GLFWcursorposfun
	class_ref 153730 // GLFWcursorenterfun
	class_ref 153858 // GLFWscrollfun
	class_ref 153986 // GLFWkeyfun
	class_ref 154114 // GLFWcharfun
	class_ref 154242 // GLFWcharmodsfun
	class_ref 154370 // GLFWdropfun
	class_ref 154498 // GLFWmonitorfun
	class_ref 154626 // GLFWjoystickfun
	class_ref 154754 // GLFWvidmode
	class_ref 154882 // GLFWgammaramp
	class_ref 155010 // GLFWimage
	class_ref 155138 // GLFWgamepadstate
      end
    end
  end
end
